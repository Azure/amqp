variables:
  GOPATH: '$(system.defaultWorkingDirectory)/work'
  sdkPath: '$(GOPATH)/src/github.com/$(build.repository.name)'
  GO111MODULE: 'on'
  AMQP_BROKER_ADDR: 'amqp://127.0.0.1:25672'

jobs:
  - job: 'goamqp'
    displayName: 'Run go-amqp CI Checks'

    strategy:
      matrix:
        Linux_Go116:
          vm.image: 'ubuntu-18.04'
          go.version: '1.16.7'
        Linux_Go117:
          vm.image: 'ubuntu-18.04'
          go.version: '1.17'

    pool:
      vmImage: '$(vm.image)'

    steps:
      - task: GoTool@0
        inputs:
          version: '$(go.version)'
        displayName: "Select Go Version"

      - script: |
          set -e
          mkdir -p '$(GOPATH)/bin'
          mkdir -p '$(sdkPath)'
          shopt -s extglob
          mv !(work) '$(sdkPath)'
          echo '##vso[task.prependpath]$(GOPATH)/bin'
          go version
        displayName: 'Create Go Workspace'

      - script: |
          set -e
          go get github.com/jstemmer/go-junit-report
          go get github.com/axw/gocov/gocov
          go get github.com/AlekSi/gocov-xml
          go get -u github.com/matm/gocov-html
        workingDirectory: '$(sdkPath)'
        displayName: 'Install Dependencies'

      - script: |
          go build -v ./...
        workingDirectory: '$(sdkPath)'
        displayName: 'Build'

      - script: |
          go vet ./...
        workingDirectory: '$(sdkPath)'
        displayName: 'Vet'

      - task: UseDotNet@2
        displayName: 'Use .NET sdk'
        inputs:
          packageType: sdk
          version: 5.0.x
          installationPath: $(Agent.ToolsDirectory)/dotnet

      - script: |
          git clone https://github.com/Azure/azure-amqp $(Pipeline.Workspace)/azure-amqp
          pushd $(Pipeline.Workspace)/azure-amqp/test/TestAmqpBroker
          dotnet restore
          dotnet build
          chmod +x $(Pipeline.Workspace)/azure-amqp/bin/Debug/TestAmqpBroker/net461/TestAmqpBroker.exe
        displayName: 'Clone and Build Broker'

      - script: |
          set -e
          echo '##[command]Starting broker at $(AMQP_BROKER_ADDR)'
          $(Pipeline.Workspace)/azure-amqp/bin/Debug/TestAmqpBroker/net461/TestAmqpBroker.exe -- $(AMQP_BROKER_ADDR) &
          go test -tags -race -v -coverprofile=coverage.txt -covermode atomic ./... 2>&1 | go-junit-report > report.xml
          gocov convert coverage.txt > coverage.json
          gocov-xml < coverage.json > coverage.xml
          gocov-html < coverage.json > coverage.html
        workingDirectory: '$(sdkPath)'
        displayName: 'Run Tests'

      - script: |
          gofmt -s -l -w . >&2
        workingDirectory: '$(sdkPath)'
        displayName: 'Format Check'
        failOnStderr: true
        condition: succeededOrFailed()

      - task: PublishTestResults@2
        inputs:
          testRunner: JUnit
          testResultsFiles: $(sdkPath)/report.xml
          failTaskOnFailedTests: true

      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: Cobertura 
          summaryFileLocation: $(sdkPath)/coverage.xml
          additionalCodeCoverageFiles: $(sdkPath)/coverage.html
